|TopLevel
led9 <= DEBUG.DB_MAX_OUTPUT_PORT_TYPE
key0 => inst9.IN0
clk_50MHz => debouncer:inst8.clk
clk_50MHz => UART:inst.clk_50MHz
clk_50MHz => fine_clk_divN:inst12.clk_in
SW0 => debouncer:inst8.rst
SW0 => led0.DATAIN
SW0 => UART:inst.SW0
SW0 => fine_clk_divN:inst12.rst
SW0 => instructionRAM:inst14.rst
led1 <= MODE_SW[0].DB_MAX_OUTPUT_PORT_TYPE
MODE_SW[0] => led1.DATAIN
MODE_SW[0] => instructionRAM:inst14.MODE[0]
MODE_SW[1] => led2.DATAIN
MODE_SW[1] => instructionRAM:inst14.MODE[1]
led2 <= MODE_SW[1].DB_MAX_OUTPUT_PORT_TYPE
led0 <= SW0.DB_MAX_OUTPUT_PORT_TYPE
disp0[6] <= inst4[0].DB_MAX_OUTPUT_PORT_TYPE
disp0[5] <= inst4[1].DB_MAX_OUTPUT_PORT_TYPE
disp0[4] <= inst4[2].DB_MAX_OUTPUT_PORT_TYPE
disp0[3] <= inst4[3].DB_MAX_OUTPUT_PORT_TYPE
disp0[2] <= inst4[4].DB_MAX_OUTPUT_PORT_TYPE
disp0[1] <= inst4[5].DB_MAX_OUTPUT_PORT_TYPE
disp0[0] <= inst4[6].DB_MAX_OUTPUT_PORT_TYPE
UART2_RX => UART:inst.UART2_RX
disp1[6] <= inst5[0].DB_MAX_OUTPUT_PORT_TYPE
disp1[5] <= inst5[1].DB_MAX_OUTPUT_PORT_TYPE
disp1[4] <= inst5[2].DB_MAX_OUTPUT_PORT_TYPE
disp1[3] <= inst5[3].DB_MAX_OUTPUT_PORT_TYPE
disp1[2] <= inst5[4].DB_MAX_OUTPUT_PORT_TYPE
disp1[1] <= inst5[5].DB_MAX_OUTPUT_PORT_TYPE
disp1[0] <= inst5[6].DB_MAX_OUTPUT_PORT_TYPE
disp2[6] <= inst7[0].DB_MAX_OUTPUT_PORT_TYPE
disp2[5] <= inst7[1].DB_MAX_OUTPUT_PORT_TYPE
disp2[4] <= inst7[2].DB_MAX_OUTPUT_PORT_TYPE
disp2[3] <= inst7[3].DB_MAX_OUTPUT_PORT_TYPE
disp2[2] <= inst7[4].DB_MAX_OUTPUT_PORT_TYPE
disp2[1] <= inst7[5].DB_MAX_OUTPUT_PORT_TYPE
disp2[0] <= inst7[6].DB_MAX_OUTPUT_PORT_TYPE
disp3[6] <= inst10[0].DB_MAX_OUTPUT_PORT_TYPE
disp3[5] <= inst10[1].DB_MAX_OUTPUT_PORT_TYPE
disp3[4] <= inst10[2].DB_MAX_OUTPUT_PORT_TYPE
disp3[3] <= inst10[3].DB_MAX_OUTPUT_PORT_TYPE
disp3[2] <= inst10[4].DB_MAX_OUTPUT_PORT_TYPE
disp3[1] <= inst10[5].DB_MAX_OUTPUT_PORT_TYPE
disp3[0] <= inst10[6].DB_MAX_OUTPUT_PORT_TYPE


|TopLevel|debouncer:inst8
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
d => state_reg.OUTPUTSELECT
d => state_reg.OUTPUTSELECT
d => state_reg.OUTPUTSELECT
d => state_reg.OUTPUTSELECT
d => state_reg.OUTPUTSELECT
d => state_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
clk => q~reg0.CLK
clk => counter_reg[0].CLK
clk => counter_reg[1].CLK
clk => counter_reg[2].CLK
clk => counter_reg[3].CLK
clk => counter_reg[4].CLK
clk => counter_reg[5].CLK
clk => counter_reg[6].CLK
clk => counter_reg[7].CLK
clk => counter_reg[8].CLK
clk => counter_reg[9].CLK
clk => counter_reg[10].CLK
clk => counter_reg[11].CLK
clk => counter_reg[12].CLK
clk => counter_reg[13].CLK
clk => counter_reg[14].CLK
clk => counter_reg[15].CLK
clk => counter_reg[16].CLK
clk => counter_reg[17].CLK
clk => counter_reg[18].CLK
clk => counter_reg[19].CLK
clk => counter_reg[20].CLK
clk => counter_reg[21].CLK
clk => counter_reg[22].CLK
clk => counter_reg[23].CLK
clk => counter_reg[24].CLK
clk => state_reg~4.DATAIN
rst => q~reg0.ACLR
rst => counter_reg[0].ACLR
rst => counter_reg[1].ACLR
rst => counter_reg[2].ACLR
rst => counter_reg[3].ACLR
rst => counter_reg[4].ACLR
rst => counter_reg[5].ACLR
rst => counter_reg[6].ACLR
rst => counter_reg[7].ACLR
rst => counter_reg[8].ACLR
rst => counter_reg[9].ACLR
rst => counter_reg[10].ACLR
rst => counter_reg[11].ACLR
rst => counter_reg[12].ACLR
rst => counter_reg[13].ACLR
rst => counter_reg[14].ACLR
rst => counter_reg[15].ACLR
rst => counter_reg[16].ACLR
rst => counter_reg[17].ACLR
rst => counter_reg[18].ACLR
rst => counter_reg[19].ACLR
rst => counter_reg[20].ACLR
rst => counter_reg[21].ACLR
rst => counter_reg[22].ACLR
rst => counter_reg[23].ACLR
rst => counter_reg[24].ACLR
rst => state_reg~6.DATAIN


|TopLevel|seven_seg_controller:inst3
disp0[6] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
disp0[5] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
disp0[4] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
disp0[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
disp0[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
disp0[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
disp0[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
disp1[6] <= WideOr13.DB_MAX_OUTPUT_PORT_TYPE
disp1[5] <= WideOr12.DB_MAX_OUTPUT_PORT_TYPE
disp1[4] <= WideOr11.DB_MAX_OUTPUT_PORT_TYPE
disp1[3] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
disp1[2] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
disp1[1] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
disp1[0] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0
data[4] => Decoder1.IN3
data[5] => Decoder1.IN2
data[6] => Decoder1.IN1
data[7] => Decoder1.IN0


|TopLevel|UART:inst
eot <= bsy_detector:inst2.eot
clk_50MHz => uart_clk_divN:inst.clk_in
SW0 => uart_clk_divN:inst.rst
SW0 => uart_controller:inst1.rst
SW0 => bsy_detector:inst2.rst
UART2_RX => uart_clk_divN:inst.sense
UART2_RX => uart_controller:inst1.data_in
data_out[0] <= bsy_detector:inst2.data_out[0]
data_out[1] <= bsy_detector:inst2.data_out[1]
data_out[2] <= bsy_detector:inst2.data_out[2]
data_out[3] <= bsy_detector:inst2.data_out[3]
data_out[4] <= bsy_detector:inst2.data_out[4]
data_out[5] <= bsy_detector:inst2.data_out[5]
data_out[6] <= bsy_detector:inst2.data_out[6]
data_out[7] <= bsy_detector:inst2.data_out[7]


|TopLevel|UART:inst|bsy_detector:inst2
data_out[0] <= data_out[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
eot <= eot$latch.DB_MAX_OUTPUT_PORT_TYPE
data_in[0] => data_out[0]$latch.DATAIN
data_in[1] => data_out[1]$latch.DATAIN
data_in[2] => data_out[2]$latch.DATAIN
data_in[3] => data_out[3]$latch.DATAIN
data_in[4] => data_out[4]$latch.DATAIN
data_in[5] => data_out[5]$latch.DATAIN
data_in[6] => data_out[6]$latch.DATAIN
data_in[7] => data_out[7]$latch.DATAIN
bsy => data_out[0]$latch.LATCH_ENABLE
bsy => data_out[1]$latch.LATCH_ENABLE
bsy => data_out[2]$latch.LATCH_ENABLE
bsy => data_out[3]$latch.LATCH_ENABLE
bsy => data_out[4]$latch.LATCH_ENABLE
bsy => data_out[5]$latch.LATCH_ENABLE
bsy => data_out[6]$latch.LATCH_ENABLE
bsy => data_out[7]$latch.LATCH_ENABLE
bsy => eot$latch.DATAIN
rst => data_out[0]$latch.ACLR
rst => data_out[1]$latch.ACLR
rst => data_out[2]$latch.ACLR
rst => data_out[3]$latch.ACLR
rst => data_out[4]$latch.ACLR
rst => data_out[5]$latch.ACLR
rst => data_out[6]$latch.ACLR
rst => data_out[7]$latch.ACLR
rst => eot$latch.LATCH_ENABLE


|TopLevel|UART:inst|uart_controller:inst1
data_out[0] <= shift_reg[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= shift_reg[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= shift_reg[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= shift_reg[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= shift_reg[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= shift_reg[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= shift_reg[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= shift_reg[7].DB_MAX_OUTPUT_PORT_TYPE
bsy <= bsy~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => bsy~reg0.CLK
clk => counter_reg[0].CLK
clk => counter_reg[1].CLK
clk => counter_reg[2].CLK
clk => counter_reg[3].CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
rst => bsy~reg0.PRESET
rst => counter_reg[0].ACLR
rst => counter_reg[1].ACLR
rst => counter_reg[2].ACLR
rst => counter_reg[3].ACLR
rst => shift_reg[0].ACLR
rst => shift_reg[1].ACLR
rst => shift_reg[2].ACLR
rst => shift_reg[3].ACLR
rst => shift_reg[4].ACLR
rst => shift_reg[5].ACLR
rst => shift_reg[6].ACLR
rst => shift_reg[7].ACLR
data_in => shift_reg.DATAB


|TopLevel|UART:inst|uart_clk_divN:inst
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk_in => bsy_posedge_waiting.CLK
clk_in => transmission_state.CLK
clk_in => clk_out~reg0.CLK
clk_in => counter_reg[0].CLK
clk_in => counter_reg[1].CLK
clk_in => counter_reg[2].CLK
clk_in => counter_reg[3].CLK
clk_in => counter_reg[4].CLK
clk_in => counter_reg[5].CLK
clk_in => counter_reg[6].CLK
clk_in => counter_reg[7].CLK
clk_in => counter_reg[8].CLK
clk_in => counter_reg[9].CLK
clk_in => counter_reg[10].CLK
clk_in => counter_reg[11].CLK
clk_in => counter_reg[12].CLK
clk_in => counter_reg[13].CLK
clk_in => counter_reg[14].CLK
clk_in => counter_reg[15].CLK
clk_in => counter_reg[16].CLK
clk_in => counter_reg[17].CLK
clk_in => counter_reg[18].CLK
clk_in => counter_reg[19].CLK
clk_in => counter_reg[20].CLK
clk_in => counter_reg[21].CLK
clk_in => counter_reg[22].CLK
clk_in => counter_reg[23].CLK
clk_in => counter_reg[24].CLK
rst => Decoder0.IN0
sense => transmission_state.OUTPUTSELECT
sense => bsy_posedge_waiting.OUTPUTSELECT
bsy => always0.IN1
bsy => bsy_posedge_waiting.OUTPUTSELECT


|TopLevel|seven_seg_controller:inst6
disp0[6] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
disp0[5] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
disp0[4] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
disp0[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
disp0[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
disp0[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
disp0[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
disp1[6] <= WideOr13.DB_MAX_OUTPUT_PORT_TYPE
disp1[5] <= WideOr12.DB_MAX_OUTPUT_PORT_TYPE
disp1[4] <= WideOr11.DB_MAX_OUTPUT_PORT_TYPE
disp1[3] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
disp1[2] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
disp1[1] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
disp1[0] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0
data[4] => Decoder1.IN3
data[5] => Decoder1.IN2
data[6] => Decoder1.IN1
data[7] => Decoder1.IN0


|TopLevel|instructionRAM:inst14
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_in[0] => ram.DATAB
data_in[0] => ram.DATAB
data_in[0] => ram.DATAB
data_in[0] => ram.DATAB
data_in[0] => ram.DATAB
data_in[0] => ram.DATAB
data_in[1] => ram.DATAB
data_in[1] => ram.DATAB
data_in[1] => ram.DATAB
data_in[1] => ram.DATAB
data_in[1] => ram.DATAB
data_in[1] => ram.DATAB
data_in[2] => ram.DATAB
data_in[2] => ram.DATAB
data_in[2] => ram.DATAB
data_in[2] => ram.DATAB
data_in[2] => ram.DATAB
data_in[2] => ram.DATAB
data_in[3] => ram.DATAB
data_in[3] => ram.DATAB
data_in[3] => ram.DATAB
data_in[3] => ram.DATAB
data_in[3] => ram.DATAB
data_in[3] => ram.DATAB
data_in[4] => ram.DATAB
data_in[4] => ram.DATAB
data_in[4] => ram.DATAB
data_in[4] => ram.DATAB
data_in[4] => ram.DATAB
data_in[4] => ram.DATAB
data_in[5] => ram.DATAB
data_in[5] => ram.DATAB
data_in[5] => ram.DATAB
data_in[5] => ram.DATAB
data_in[5] => ram.DATAB
data_in[5] => ram.DATAB
data_in[6] => ram.DATAB
data_in[6] => ram.DATAB
data_in[6] => ram.DATAB
data_in[6] => ram.DATAB
data_in[6] => ram.DATAB
data_in[6] => ram.DATAB
data_in[7] => ram.DATAB
data_in[7] => ram.DATAB
data_in[7] => ram.DATAB
data_in[7] => ram.DATAB
data_in[7] => ram.DATAB
data_in[7] => ram.DATAB
MODE[0] => Mux24.IN5
MODE[0] => Mux25.IN5
MODE[0] => Mux26.IN5
MODE[0] => Mux27.IN5
MODE[0] => Mux28.IN5
MODE[0] => Mux29.IN5
MODE[0] => Mux30.IN5
MODE[0] => Mux31.IN5
MODE[0] => Decoder1.IN1
MODE[1] => Mux24.IN4
MODE[1] => Mux25.IN4
MODE[1] => Mux26.IN4
MODE[1] => Mux27.IN4
MODE[1] => Mux28.IN4
MODE[1] => Mux29.IN4
MODE[1] => Mux30.IN4
MODE[1] => Mux31.IN4
MODE[1] => Decoder1.IN0
address[0] => Mux16.IN4
address[0] => Mux17.IN4
address[0] => Mux18.IN4
address[0] => Mux19.IN4
address[0] => Mux20.IN4
address[0] => Mux21.IN4
address[0] => Mux22.IN4
address[0] => Mux23.IN4
address[1] => Mux16.IN3
address[1] => Mux17.IN3
address[1] => Mux18.IN3
address[1] => Mux19.IN3
address[1] => Mux20.IN3
address[1] => Mux21.IN3
address[1] => Mux22.IN3
address[1] => Mux23.IN3
address[2] => Mux16.IN2
address[2] => Mux17.IN2
address[2] => Mux18.IN2
address[2] => Mux19.IN2
address[2] => Mux20.IN2
address[2] => Mux21.IN2
address[2] => Mux22.IN2
address[2] => Mux23.IN2
address[3] => ~NO_FANOUT~
address[4] => ~NO_FANOUT~
address[5] => ~NO_FANOUT~
address[6] => ~NO_FANOUT~
address[7] => ~NO_FANOUT~
address[8] => ~NO_FANOUT~
address[9] => ~NO_FANOUT~
address[10] => ~NO_FANOUT~
address[11] => ~NO_FANOUT~
clk => prev_reg.CLK
clk => current_reg.CLK
clk => ram[0][0].CLK
clk => ram[0][1].CLK
clk => ram[0][2].CLK
clk => ram[0][3].CLK
clk => ram[0][4].CLK
clk => ram[0][5].CLK
clk => ram[0][6].CLK
clk => ram[0][7].CLK
clk => ram[1][0].CLK
clk => ram[1][1].CLK
clk => ram[1][2].CLK
clk => ram[1][3].CLK
clk => ram[1][4].CLK
clk => ram[1][5].CLK
clk => ram[1][6].CLK
clk => ram[1][7].CLK
clk => ram[2][0].CLK
clk => ram[2][1].CLK
clk => ram[2][2].CLK
clk => ram[2][3].CLK
clk => ram[2][4].CLK
clk => ram[2][5].CLK
clk => ram[2][6].CLK
clk => ram[2][7].CLK
clk => ram[3][0].CLK
clk => ram[3][1].CLK
clk => ram[3][2].CLK
clk => ram[3][3].CLK
clk => ram[3][4].CLK
clk => ram[3][5].CLK
clk => ram[3][6].CLK
clk => ram[3][7].CLK
clk => ram[4][0].CLK
clk => ram[4][1].CLK
clk => ram[4][2].CLK
clk => ram[4][3].CLK
clk => ram[4][4].CLK
clk => ram[4][5].CLK
clk => ram[4][6].CLK
clk => ram[4][7].CLK
clk => ram[5][0].CLK
clk => ram[5][1].CLK
clk => ram[5][2].CLK
clk => ram[5][3].CLK
clk => ram[5][4].CLK
clk => ram[5][5].CLK
clk => ram[5][6].CLK
clk => ram[5][7].CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => addressDEBUG_reg[0].CLK
clk => addressDEBUG_reg[1].CLK
clk => addressDEBUG_reg[2].CLK
clk => addressDEBUG_reg[3].CLK
clk => addressDEBUG_reg[4].CLK
clk => addressDEBUG_reg[5].CLK
clk => addressDEBUG_reg[6].CLK
clk => addressDEBUG_reg[7].CLK
clk => addressDEBUG_reg[8].CLK
clk => addressDEBUG_reg[9].CLK
clk => addressDEBUG_reg[10].CLK
clk => addressDEBUG_reg[11].CLK
clk => addressWRITE_reg[0].CLK
clk => addressWRITE_reg[1].CLK
clk => addressWRITE_reg[2].CLK
clk => addressWRITE_reg[3].CLK
clk => addressWRITE_reg[4].CLK
clk => addressWRITE_reg[5].CLK
clk => addressWRITE_reg[6].CLK
clk => addressWRITE_reg[7].CLK
clk => addressWRITE_reg[8].CLK
clk => addressWRITE_reg[9].CLK
clk => addressWRITE_reg[10].CLK
clk => addressWRITE_reg[11].CLK
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => current_reg.ENA
rst => prev_reg.ENA
DEBUG => current_reg.DATAB
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT


|TopLevel|fine_clk_divN:inst12
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk_in => clk_out~reg0.CLK
clk_in => counter_reg[0].CLK
clk_in => counter_reg[1].CLK
clk_in => counter_reg[2].CLK
clk_in => counter_reg[3].CLK
clk_in => counter_reg[4].CLK
clk_in => counter_reg[5].CLK
clk_in => counter_reg[6].CLK
clk_in => counter_reg[7].CLK
clk_in => counter_reg[8].CLK
clk_in => counter_reg[9].CLK
clk_in => counter_reg[10].CLK
clk_in => counter_reg[11].CLK
clk_in => counter_reg[12].CLK
clk_in => counter_reg[13].CLK
clk_in => counter_reg[14].CLK
clk_in => counter_reg[15].CLK
clk_in => counter_reg[16].CLK
clk_in => counter_reg[17].CLK
clk_in => counter_reg[18].CLK
clk_in => counter_reg[19].CLK
clk_in => counter_reg[20].CLK
clk_in => counter_reg[21].CLK
clk_in => counter_reg[22].CLK
clk_in => counter_reg[23].CLK
clk_in => counter_reg[24].CLK
rst => Decoder0.IN0


