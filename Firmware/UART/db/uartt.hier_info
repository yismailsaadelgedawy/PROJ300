|TopLevel
led9 <= btnA.DB_MAX_OUTPUT_PORT_TYPE
key0 => inst9.IN0
clk_50MHz => debouncer:inst8.clk
clk_50MHz => InstructionBuffer:inst1.clk_50
clk_50MHz => UART:inst.clk_50MHz
clk_50MHz => debouncer:inst14.clk
SW0 => debouncer:inst8.rst
SW0 => led0.DATAIN
SW0 => InstructionBuffer:inst1.sw_rst
SW0 => UART:inst.SW0
SW0 => debouncer:inst14.rst
led1 <= MODE_SW[0].DB_MAX_OUTPUT_PORT_TYPE
MODE_SW[0] => led1.DATAIN
MODE_SW[0] => InstructionBuffer:inst1.debug_sw
MODE_SW[1] => led2.DATAIN
led2 <= MODE_SW[1].DB_MAX_OUTPUT_PORT_TYPE
led0 <= SW0.DB_MAX_OUTPUT_PORT_TYPE
disp0[6] <= inst4[0].DB_MAX_OUTPUT_PORT_TYPE
disp0[5] <= inst4[1].DB_MAX_OUTPUT_PORT_TYPE
disp0[4] <= inst4[2].DB_MAX_OUTPUT_PORT_TYPE
disp0[3] <= inst4[3].DB_MAX_OUTPUT_PORT_TYPE
disp0[2] <= inst4[4].DB_MAX_OUTPUT_PORT_TYPE
disp0[1] <= inst4[5].DB_MAX_OUTPUT_PORT_TYPE
disp0[0] <= inst4[6].DB_MAX_OUTPUT_PORT_TYPE
UART2_RX => UART:inst.UART2_RX
key1 => inst15.IN0
disp1[6] <= inst5[0].DB_MAX_OUTPUT_PORT_TYPE
disp1[5] <= inst5[1].DB_MAX_OUTPUT_PORT_TYPE
disp1[4] <= inst5[2].DB_MAX_OUTPUT_PORT_TYPE
disp1[3] <= inst5[3].DB_MAX_OUTPUT_PORT_TYPE
disp1[2] <= inst5[4].DB_MAX_OUTPUT_PORT_TYPE
disp1[1] <= inst5[5].DB_MAX_OUTPUT_PORT_TYPE
disp1[0] <= inst5[6].DB_MAX_OUTPUT_PORT_TYPE
disp2[6] <= inst7[0].DB_MAX_OUTPUT_PORT_TYPE
disp2[5] <= inst7[1].DB_MAX_OUTPUT_PORT_TYPE
disp2[4] <= inst7[2].DB_MAX_OUTPUT_PORT_TYPE
disp2[3] <= inst7[3].DB_MAX_OUTPUT_PORT_TYPE
disp2[2] <= inst7[4].DB_MAX_OUTPUT_PORT_TYPE
disp2[1] <= inst7[5].DB_MAX_OUTPUT_PORT_TYPE
disp2[0] <= inst7[6].DB_MAX_OUTPUT_PORT_TYPE
disp3[6] <= inst10[0].DB_MAX_OUTPUT_PORT_TYPE
disp3[5] <= inst10[1].DB_MAX_OUTPUT_PORT_TYPE
disp3[4] <= inst10[2].DB_MAX_OUTPUT_PORT_TYPE
disp3[3] <= inst10[3].DB_MAX_OUTPUT_PORT_TYPE
disp3[2] <= inst10[4].DB_MAX_OUTPUT_PORT_TYPE
disp3[1] <= inst10[5].DB_MAX_OUTPUT_PORT_TYPE
disp3[0] <= inst10[6].DB_MAX_OUTPUT_PORT_TYPE
disp4[6] <= inst17[0].DB_MAX_OUTPUT_PORT_TYPE
disp4[5] <= inst17[1].DB_MAX_OUTPUT_PORT_TYPE
disp4[4] <= inst17[2].DB_MAX_OUTPUT_PORT_TYPE
disp4[3] <= inst17[3].DB_MAX_OUTPUT_PORT_TYPE
disp4[2] <= inst17[4].DB_MAX_OUTPUT_PORT_TYPE
disp4[1] <= inst17[5].DB_MAX_OUTPUT_PORT_TYPE
disp4[0] <= inst17[6].DB_MAX_OUTPUT_PORT_TYPE
disp5[6] <= inst18[0].DB_MAX_OUTPUT_PORT_TYPE
disp5[5] <= inst18[1].DB_MAX_OUTPUT_PORT_TYPE
disp5[4] <= inst18[2].DB_MAX_OUTPUT_PORT_TYPE
disp5[3] <= inst18[3].DB_MAX_OUTPUT_PORT_TYPE
disp5[2] <= inst18[4].DB_MAX_OUTPUT_PORT_TYPE
disp5[1] <= inst18[5].DB_MAX_OUTPUT_PORT_TYPE
disp5[0] <= inst18[6].DB_MAX_OUTPUT_PORT_TYPE


|TopLevel|debouncer:inst8
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
d => state_reg.OUTPUTSELECT
d => state_reg.OUTPUTSELECT
d => state_reg.OUTPUTSELECT
d => state_reg.OUTPUTSELECT
d => state_reg.OUTPUTSELECT
d => state_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
clk => q~reg0.CLK
clk => counter_reg[0].CLK
clk => counter_reg[1].CLK
clk => counter_reg[2].CLK
clk => counter_reg[3].CLK
clk => counter_reg[4].CLK
clk => counter_reg[5].CLK
clk => counter_reg[6].CLK
clk => counter_reg[7].CLK
clk => counter_reg[8].CLK
clk => counter_reg[9].CLK
clk => counter_reg[10].CLK
clk => counter_reg[11].CLK
clk => counter_reg[12].CLK
clk => counter_reg[13].CLK
clk => counter_reg[14].CLK
clk => counter_reg[15].CLK
clk => counter_reg[16].CLK
clk => counter_reg[17].CLK
clk => counter_reg[18].CLK
clk => counter_reg[19].CLK
clk => counter_reg[20].CLK
clk => counter_reg[21].CLK
clk => counter_reg[22].CLK
clk => counter_reg[23].CLK
clk => counter_reg[24].CLK
clk => state_reg~4.DATAIN
rst => q~reg0.ACLR
rst => counter_reg[0].ACLR
rst => counter_reg[1].ACLR
rst => counter_reg[2].ACLR
rst => counter_reg[3].ACLR
rst => counter_reg[4].ACLR
rst => counter_reg[5].ACLR
rst => counter_reg[6].ACLR
rst => counter_reg[7].ACLR
rst => counter_reg[8].ACLR
rst => counter_reg[9].ACLR
rst => counter_reg[10].ACLR
rst => counter_reg[11].ACLR
rst => counter_reg[12].ACLR
rst => counter_reg[13].ACLR
rst => counter_reg[14].ACLR
rst => counter_reg[15].ACLR
rst => counter_reg[16].ACLR
rst => counter_reg[17].ACLR
rst => counter_reg[18].ACLR
rst => counter_reg[19].ACLR
rst => counter_reg[20].ACLR
rst => counter_reg[21].ACLR
rst => counter_reg[22].ACLR
rst => counter_reg[23].ACLR
rst => counter_reg[24].ACLR
rst => state_reg~6.DATAIN


|TopLevel|seven_seg_controller:inst3
disp0[6] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
disp0[5] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
disp0[4] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
disp0[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
disp0[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
disp0[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
disp0[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
disp1[6] <= WideOr13.DB_MAX_OUTPUT_PORT_TYPE
disp1[5] <= WideOr12.DB_MAX_OUTPUT_PORT_TYPE
disp1[4] <= WideOr11.DB_MAX_OUTPUT_PORT_TYPE
disp1[3] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
disp1[2] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
disp1[1] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
disp1[0] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0
data[4] => Decoder1.IN3
data[5] => Decoder1.IN2
data[6] => Decoder1.IN1
data[7] => Decoder1.IN0


|TopLevel|InstructionBuffer:inst1
CPU_instruction[0] <= instructionRAM:inst20.instruction[0]
CPU_instruction[1] <= instructionRAM:inst20.instruction[1]
CPU_instruction[2] <= instructionRAM:inst20.instruction[2]
CPU_instruction[3] <= instructionRAM:inst20.instruction[3]
CPU_instruction[4] <= instructionRAM:inst20.instruction[4]
CPU_instruction[5] <= instructionRAM:inst20.instruction[5]
CPU_instruction[6] <= instructionRAM:inst20.instruction[6]
CPU_instruction[7] <= instructionRAM:inst20.instruction[7]
CPU_instruction[8] <= instructionRAM:inst20.instruction[8]
CPU_instruction[9] <= instructionRAM:inst20.instruction[9]
CPU_instruction[10] <= instructionRAM:inst20.instruction[10]
CPU_instruction[11] <= instructionRAM:inst20.instruction[11]
CPU_instruction[12] <= instructionRAM:inst20.instruction[12]
CPU_instruction[13] <= instructionRAM:inst20.instruction[13]
CPU_instruction[14] <= instructionRAM:inst20.instruction[14]
CPU_instruction[15] <= instructionRAM:inst20.instruction[15]
CPU_instruction[16] <= instructionRAM:inst20.instruction[16]
CPU_instruction[17] <= instructionRAM:inst20.instruction[17]
CPU_instruction[18] <= instructionRAM:inst20.instruction[18]
CPU_instruction[19] <= instructionRAM:inst20.instruction[19]
CPU_instruction[20] <= instructionRAM:inst20.instruction[20]
CPU_instruction[21] <= instructionRAM:inst20.instruction[21]
CPU_instruction[22] <= instructionRAM:inst20.instruction[22]
CPU_instruction[23] <= instructionRAM:inst20.instruction[23]
CPU_instruction[24] <= instructionRAM:inst20.instruction[24]
CPU_instruction[25] <= instructionRAM:inst20.instruction[25]
CPU_instruction[26] <= instructionRAM:inst20.instruction[26]
CPU_instruction[27] <= instructionRAM:inst20.instruction[27]
CPU_instruction[28] <= instructionRAM:inst20.instruction[28]
CPU_instruction[29] <= instructionRAM:inst20.instruction[29]
CPU_instruction[30] <= instructionRAM:inst20.instruction[30]
CPU_instruction[31] <= instructionRAM:inst20.instruction[31]
CPU_instruction[32] <= instructionRAM:inst20.instruction[32]
CPU_instruction[33] <= instructionRAM:inst20.instruction[33]
CPU_instruction[34] <= instructionRAM:inst20.instruction[34]
CPU_instruction[35] <= instructionRAM:inst20.instruction[35]
CPU_instruction[36] <= instructionRAM:inst20.instruction[36]
CPU_instruction[37] <= instructionRAM:inst20.instruction[37]
sw_rst => instructionRAM:inst20.rst
sw_rst => fine_clk_divN:inst12.rst
sw_rst => intermediaryRAM:inst1.rst
sw_rst => d_ffN:inst16.rst
sw_rst => d_ffN:inst14.rst
sw_rst => d_ffN:inst15.rst
sw_rst => d_ffN:inst11.rst
debug_btnA => instructionRAM:inst20.btnA
debug_btnB => instructionRAM:inst20.btnB
clk_50 => fine_clk_divN:inst12.clk_in
eot_flag => d_ffN:inst14.d[0]
UART_data[0] => d_ffN:inst11.d[0]
UART_data[1] => d_ffN:inst11.d[1]
UART_data[2] => d_ffN:inst11.d[2]
UART_data[3] => d_ffN:inst11.d[3]
UART_data[4] => d_ffN:inst11.d[4]
UART_data[5] => d_ffN:inst11.d[5]
UART_data[6] => d_ffN:inst11.d[6]
UART_data[7] => d_ffN:inst11.d[7]
addr[0] => instructionRAM:inst20.addr[0]
addr[1] => instructionRAM:inst20.addr[1]
addr[2] => instructionRAM:inst20.addr[2]
addr[3] => instructionRAM:inst20.addr[3]
addr[4] => instructionRAM:inst20.addr[4]
addr[5] => instructionRAM:inst20.addr[5]
addr[6] => instructionRAM:inst20.addr[6]
addr[7] => instructionRAM:inst20.addr[7]
addr[8] => instructionRAM:inst20.addr[8]
addr[9] => instructionRAM:inst20.addr[9]
addr[10] => instructionRAM:inst20.addr[10]
addr[11] => instructionRAM:inst20.addr[11]
debug_out[0] <= intermediaryRAM:inst1.data_out[0]
debug_out[1] <= intermediaryRAM:inst1.data_out[1]
debug_out[2] <= intermediaryRAM:inst1.data_out[2]
debug_out[3] <= intermediaryRAM:inst1.data_out[3]
debug_out[4] <= intermediaryRAM:inst1.data_out[4]
debug_out[5] <= intermediaryRAM:inst1.data_out[5]
debug_out[6] <= intermediaryRAM:inst1.data_out[6]
debug_out[7] <= intermediaryRAM:inst1.data_out[7]
debugA[0] <= instructionRAM:inst20.debugA[0]
debugA[1] <= instructionRAM:inst20.debugA[1]
debugA[2] <= instructionRAM:inst20.debugA[2]
debugA[3] <= instructionRAM:inst20.debugA[3]
debugA[4] <= instructionRAM:inst20.debugA[4]
debugA[5] <= instructionRAM:inst20.debugA[5]
debugA[6] <= instructionRAM:inst20.debugA[6]
debugA[7] <= instructionRAM:inst20.debugA[7]
debugB[0] <= instructionRAM:inst20.debugB[0]
debugB[1] <= instructionRAM:inst20.debugB[1]
debugB[2] <= instructionRAM:inst20.debugB[2]
debugB[3] <= instructionRAM:inst20.debugB[3]
debugB[4] <= instructionRAM:inst20.debugB[4]
debugB[5] <= instructionRAM:inst20.debugB[5]
debugB[6] <= instructionRAM:inst20.debugB[6]
debugB[7] <= instructionRAM:inst20.debugB[7]
debugC[0] <= instructionRAM:inst20.debugC[0]
debugC[1] <= instructionRAM:inst20.debugC[1]
debugC[2] <= instructionRAM:inst20.debugC[2]
debugC[3] <= instructionRAM:inst20.debugC[3]
debugC[4] <= instructionRAM:inst20.debugC[4]
debugC[5] <= instructionRAM:inst20.debugC[5]
debugC[6] <= instructionRAM:inst20.debugC[6]
debugC[7] <= instructionRAM:inst20.debugC[7]
debug_sw => ~NO_FANOUT~


|TopLevel|InstructionBuffer:inst1|instructionRAM:inst20
instruction[0] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[1] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[2] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[3] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[4] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[5] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[6] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[7] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[8] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[9] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[10] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[11] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[12] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[13] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[14] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[15] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[16] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[17] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[18] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[19] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[20] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[21] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[22] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[23] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[24] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[25] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[26] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[27] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[28] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[29] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[30] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[31] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[32] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[33] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[34] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[35] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[36] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
instruction[37] <= instruction.DB_MAX_OUTPUT_PORT_TYPE
debugA[0] <= debugA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugA[1] <= debugA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugA[2] <= debugA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugA[3] <= debugA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugA[4] <= debugA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugA[5] <= debugA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugA[6] <= debugA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugA[7] <= debugA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugB[0] <= debugB[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugB[1] <= debugB[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugB[2] <= debugB[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugB[3] <= debugB[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugB[4] <= debugB[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugB[5] <= debugB[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugB[6] <= debugB[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugB[7] <= debugB[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugC[0] <= debugC[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugC[1] <= debugC[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugC[2] <= debugC[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugC[3] <= debugC[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugC[4] <= debugC[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugC[5] <= debugC[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugC[6] <= debugC[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
debugC[7] <= debugC[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
opcode[0] => ram.DATAB
opcode[1] => ram.DATAB
opcode[2] => ram.DATAB
opcode[3] => ram.DATAB
opcode[4] => ~NO_FANOUT~
opcode[5] => ~NO_FANOUT~
opcode[6] => ~NO_FANOUT~
opcode[7] => ~NO_FANOUT~
sel[0] => ram.DATAB
sel[1] => ram.DATAB
sel[2] => ~NO_FANOUT~
sel[3] => ~NO_FANOUT~
sel[4] => ~NO_FANOUT~
sel[5] => ~NO_FANOUT~
sel[6] => ~NO_FANOUT~
sel[7] => ~NO_FANOUT~
op1h[0] => ram.DATAB
op1h[1] => ram.DATAB
op1h[2] => ram.DATAB
op1h[3] => ram.DATAB
op1h[4] => ram.DATAB
op1h[5] => ram.DATAB
op1h[6] => ram.DATAB
op1h[7] => ram.DATAB
op1l[0] => ram.DATAB
op1l[1] => ram.DATAB
op1l[2] => ram.DATAB
op1l[3] => ram.DATAB
op1l[4] => ram.DATAB
op1l[5] => ram.DATAB
op1l[6] => ram.DATAB
op1l[7] => ram.DATAB
op2h[0] => ram.DATAB
op2h[1] => ram.DATAB
op2h[2] => ram.DATAB
op2h[3] => ram.DATAB
op2h[4] => ram.DATAB
op2h[5] => ram.DATAB
op2h[6] => ram.DATAB
op2h[7] => ram.DATAB
op2l[0] => ram.DATAB
op2l[1] => ram.DATAB
op2l[2] => ram.DATAB
op2l[3] => ram.DATAB
op2l[4] => ram.DATAB
op2l[5] => ram.DATAB
op2l[6] => ram.DATAB
op2l[7] => ram.DATAB
addr[0] => Decoder0.IN0
addr[1] => ~NO_FANOUT~
addr[2] => ~NO_FANOUT~
addr[3] => ~NO_FANOUT~
addr[4] => ~NO_FANOUT~
addr[5] => ~NO_FANOUT~
addr[6] => ~NO_FANOUT~
addr[7] => ~NO_FANOUT~
addr[8] => ~NO_FANOUT~
addr[9] => ~NO_FANOUT~
addr[10] => ~NO_FANOUT~
addr[11] => ~NO_FANOUT~
rst => current.OUTPUTSELECT
rst => prev.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debug_address_cnt.OUTPUTSELECT
rst => debugA.OUTPUTSELECT
rst => debugA.OUTPUTSELECT
rst => debugA.OUTPUTSELECT
rst => debugA.OUTPUTSELECT
rst => debugA.OUTPUTSELECT
rst => debugA.OUTPUTSELECT
rst => debugA.OUTPUTSELECT
rst => debugA.OUTPUTSELECT
rst => debugB.OUTPUTSELECT
rst => debugB.OUTPUTSELECT
rst => debugB.OUTPUTSELECT
rst => debugB.OUTPUTSELECT
rst => debugB.OUTPUTSELECT
rst => debugB.OUTPUTSELECT
rst => debugB.OUTPUTSELECT
rst => debugB.OUTPUTSELECT
rst => debugC.OUTPUTSELECT
rst => debugC.OUTPUTSELECT
rst => debugC.OUTPUTSELECT
rst => debugC.OUTPUTSELECT
rst => debugC.OUTPUTSELECT
rst => debugC.OUTPUTSELECT
rst => debugC.OUTPUTSELECT
rst => debugC.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
btnA => current.DATAA
btnB => debugA.OUTPUTSELECT
btnB => debugA.OUTPUTSELECT
btnB => debugA.OUTPUTSELECT
btnB => debugA.OUTPUTSELECT
btnB => debugA.OUTPUTSELECT
btnB => debugA.OUTPUTSELECT
btnB => debugA.OUTPUTSELECT
btnB => debugA.OUTPUTSELECT
btnB => debugB.OUTPUTSELECT
btnB => debugB.OUTPUTSELECT
btnB => debugB.OUTPUTSELECT
btnB => debugB.OUTPUTSELECT
btnB => debugB.OUTPUTSELECT
btnB => debugB.OUTPUTSELECT
btnB => debugB.OUTPUTSELECT
btnB => debugB.OUTPUTSELECT
btnB => debugC.OUTPUTSELECT
btnB => debugC.OUTPUTSELECT
btnB => debugC.OUTPUTSELECT
btnB => debugC.OUTPUTSELECT
btnB => debugC.OUTPUTSELECT
btnB => debugC.OUTPUTSELECT
btnB => debugC.OUTPUTSELECT
btnB => debugC.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
load => address_cnt.OUTPUTSELECT
clk => ram[0][0].CLK
clk => ram[0][1].CLK
clk => ram[0][2].CLK
clk => ram[0][3].CLK
clk => ram[0][4].CLK
clk => ram[0][5].CLK
clk => ram[0][6].CLK
clk => ram[0][7].CLK
clk => ram[0][8].CLK
clk => ram[0][9].CLK
clk => ram[0][10].CLK
clk => ram[0][11].CLK
clk => ram[0][12].CLK
clk => ram[0][13].CLK
clk => ram[0][14].CLK
clk => ram[0][15].CLK
clk => ram[0][16].CLK
clk => ram[0][17].CLK
clk => ram[0][18].CLK
clk => ram[0][19].CLK
clk => ram[0][20].CLK
clk => ram[0][21].CLK
clk => ram[0][22].CLK
clk => ram[0][23].CLK
clk => ram[0][24].CLK
clk => ram[0][25].CLK
clk => ram[0][26].CLK
clk => ram[0][27].CLK
clk => ram[0][28].CLK
clk => ram[0][29].CLK
clk => ram[0][30].CLK
clk => ram[0][31].CLK
clk => ram[0][32].CLK
clk => ram[0][33].CLK
clk => ram[0][34].CLK
clk => ram[0][35].CLK
clk => ram[0][36].CLK
clk => ram[0][37].CLK
clk => debugC[0]~reg0.CLK
clk => debugC[1]~reg0.CLK
clk => debugC[2]~reg0.CLK
clk => debugC[3]~reg0.CLK
clk => debugC[4]~reg0.CLK
clk => debugC[5]~reg0.CLK
clk => debugC[6]~reg0.CLK
clk => debugC[7]~reg0.CLK
clk => debugB[0]~reg0.CLK
clk => debugB[1]~reg0.CLK
clk => debugB[2]~reg0.CLK
clk => debugB[3]~reg0.CLK
clk => debugB[4]~reg0.CLK
clk => debugB[5]~reg0.CLK
clk => debugB[6]~reg0.CLK
clk => debugB[7]~reg0.CLK
clk => debugA[0]~reg0.CLK
clk => debugA[1]~reg0.CLK
clk => debugA[2]~reg0.CLK
clk => debugA[3]~reg0.CLK
clk => debugA[4]~reg0.CLK
clk => debugA[5]~reg0.CLK
clk => debugA[6]~reg0.CLK
clk => debugA[7]~reg0.CLK
clk => debug_address_cnt[0].CLK
clk => debug_address_cnt[1].CLK
clk => debug_address_cnt[2].CLK
clk => debug_address_cnt[3].CLK
clk => debug_address_cnt[4].CLK
clk => debug_address_cnt[5].CLK
clk => debug_address_cnt[6].CLK
clk => debug_address_cnt[7].CLK
clk => debug_address_cnt[8].CLK
clk => debug_address_cnt[9].CLK
clk => debug_address_cnt[10].CLK
clk => debug_address_cnt[11].CLK
clk => debug_address_cnt[12].CLK
clk => debug_address_cnt[13].CLK
clk => debug_address_cnt[14].CLK
clk => debug_address_cnt[15].CLK
clk => debug_address_cnt[16].CLK
clk => debug_address_cnt[17].CLK
clk => debug_address_cnt[18].CLK
clk => debug_address_cnt[19].CLK
clk => debug_address_cnt[20].CLK
clk => debug_address_cnt[21].CLK
clk => debug_address_cnt[22].CLK
clk => debug_address_cnt[23].CLK
clk => debug_address_cnt[24].CLK
clk => debug_address_cnt[25].CLK
clk => debug_address_cnt[26].CLK
clk => debug_address_cnt[27].CLK
clk => debug_address_cnt[28].CLK
clk => debug_address_cnt[29].CLK
clk => debug_address_cnt[30].CLK
clk => debug_address_cnt[31].CLK
clk => address_cnt[0].CLK
clk => address_cnt[1].CLK
clk => address_cnt[2].CLK
clk => address_cnt[3].CLK
clk => address_cnt[4].CLK
clk => address_cnt[5].CLK
clk => address_cnt[6].CLK
clk => address_cnt[7].CLK
clk => address_cnt[8].CLK
clk => address_cnt[9].CLK
clk => address_cnt[10].CLK
clk => address_cnt[11].CLK
clk => address_cnt[12].CLK
clk => address_cnt[13].CLK
clk => address_cnt[14].CLK
clk => address_cnt[15].CLK
clk => address_cnt[16].CLK
clk => address_cnt[17].CLK
clk => address_cnt[18].CLK
clk => address_cnt[19].CLK
clk => address_cnt[20].CLK
clk => address_cnt[21].CLK
clk => address_cnt[22].CLK
clk => address_cnt[23].CLK
clk => address_cnt[24].CLK
clk => address_cnt[25].CLK
clk => address_cnt[26].CLK
clk => address_cnt[27].CLK
clk => address_cnt[28].CLK
clk => address_cnt[29].CLK
clk => address_cnt[30].CLK
clk => address_cnt[31].CLK
clk => prev.CLK
clk => current.CLK


|TopLevel|InstructionBuffer:inst1|intermediaryRAM:inst1
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
opcode[0] <= ram[0][0].DB_MAX_OUTPUT_PORT_TYPE
opcode[1] <= ram[0][1].DB_MAX_OUTPUT_PORT_TYPE
opcode[2] <= ram[0][2].DB_MAX_OUTPUT_PORT_TYPE
opcode[3] <= ram[0][3].DB_MAX_OUTPUT_PORT_TYPE
opcode[4] <= ram[0][4].DB_MAX_OUTPUT_PORT_TYPE
opcode[5] <= ram[0][5].DB_MAX_OUTPUT_PORT_TYPE
opcode[6] <= ram[0][6].DB_MAX_OUTPUT_PORT_TYPE
opcode[7] <= ram[0][7].DB_MAX_OUTPUT_PORT_TYPE
sel[0] <= ram[1][0].DB_MAX_OUTPUT_PORT_TYPE
sel[1] <= ram[1][1].DB_MAX_OUTPUT_PORT_TYPE
sel[2] <= ram[1][2].DB_MAX_OUTPUT_PORT_TYPE
sel[3] <= ram[1][3].DB_MAX_OUTPUT_PORT_TYPE
sel[4] <= ram[1][4].DB_MAX_OUTPUT_PORT_TYPE
sel[5] <= ram[1][5].DB_MAX_OUTPUT_PORT_TYPE
sel[6] <= ram[1][6].DB_MAX_OUTPUT_PORT_TYPE
sel[7] <= ram[1][7].DB_MAX_OUTPUT_PORT_TYPE
op1h[0] <= ram[2][0].DB_MAX_OUTPUT_PORT_TYPE
op1h[1] <= ram[2][1].DB_MAX_OUTPUT_PORT_TYPE
op1h[2] <= ram[2][2].DB_MAX_OUTPUT_PORT_TYPE
op1h[3] <= ram[2][3].DB_MAX_OUTPUT_PORT_TYPE
op1h[4] <= ram[2][4].DB_MAX_OUTPUT_PORT_TYPE
op1h[5] <= ram[2][5].DB_MAX_OUTPUT_PORT_TYPE
op1h[6] <= ram[2][6].DB_MAX_OUTPUT_PORT_TYPE
op1h[7] <= ram[2][7].DB_MAX_OUTPUT_PORT_TYPE
op1l[0] <= ram[3][0].DB_MAX_OUTPUT_PORT_TYPE
op1l[1] <= ram[3][1].DB_MAX_OUTPUT_PORT_TYPE
op1l[2] <= ram[3][2].DB_MAX_OUTPUT_PORT_TYPE
op1l[3] <= ram[3][3].DB_MAX_OUTPUT_PORT_TYPE
op1l[4] <= ram[3][4].DB_MAX_OUTPUT_PORT_TYPE
op1l[5] <= ram[3][5].DB_MAX_OUTPUT_PORT_TYPE
op1l[6] <= ram[3][6].DB_MAX_OUTPUT_PORT_TYPE
op1l[7] <= ram[3][7].DB_MAX_OUTPUT_PORT_TYPE
op2h[0] <= ram[4][0].DB_MAX_OUTPUT_PORT_TYPE
op2h[1] <= ram[4][1].DB_MAX_OUTPUT_PORT_TYPE
op2h[2] <= ram[4][2].DB_MAX_OUTPUT_PORT_TYPE
op2h[3] <= ram[4][3].DB_MAX_OUTPUT_PORT_TYPE
op2h[4] <= ram[4][4].DB_MAX_OUTPUT_PORT_TYPE
op2h[5] <= ram[4][5].DB_MAX_OUTPUT_PORT_TYPE
op2h[6] <= ram[4][6].DB_MAX_OUTPUT_PORT_TYPE
op2h[7] <= ram[4][7].DB_MAX_OUTPUT_PORT_TYPE
op2l[0] <= ram[5][0].DB_MAX_OUTPUT_PORT_TYPE
op2l[1] <= ram[5][1].DB_MAX_OUTPUT_PORT_TYPE
op2l[2] <= ram[5][2].DB_MAX_OUTPUT_PORT_TYPE
op2l[3] <= ram[5][3].DB_MAX_OUTPUT_PORT_TYPE
op2l[4] <= ram[5][4].DB_MAX_OUTPUT_PORT_TYPE
op2l[5] <= ram[5][5].DB_MAX_OUTPUT_PORT_TYPE
op2l[6] <= ram[5][6].DB_MAX_OUTPUT_PORT_TYPE
op2l[7] <= ram[5][7].DB_MAX_OUTPUT_PORT_TYPE
rdy <= rdy~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_in[0] => ram.DATAB
data_in[0] => ram.DATAB
data_in[0] => ram.DATAB
data_in[0] => ram.DATAB
data_in[0] => ram.DATAB
data_in[0] => ram.DATAB
data_in[1] => ram.DATAB
data_in[1] => ram.DATAB
data_in[1] => ram.DATAB
data_in[1] => ram.DATAB
data_in[1] => ram.DATAB
data_in[1] => ram.DATAB
data_in[2] => ram.DATAB
data_in[2] => ram.DATAB
data_in[2] => ram.DATAB
data_in[2] => ram.DATAB
data_in[2] => ram.DATAB
data_in[2] => ram.DATAB
data_in[3] => ram.DATAB
data_in[3] => ram.DATAB
data_in[3] => ram.DATAB
data_in[3] => ram.DATAB
data_in[3] => ram.DATAB
data_in[3] => ram.DATAB
data_in[4] => ram.DATAB
data_in[4] => ram.DATAB
data_in[4] => ram.DATAB
data_in[4] => ram.DATAB
data_in[4] => ram.DATAB
data_in[4] => ram.DATAB
data_in[5] => ram.DATAB
data_in[5] => ram.DATAB
data_in[5] => ram.DATAB
data_in[5] => ram.DATAB
data_in[5] => ram.DATAB
data_in[5] => ram.DATAB
data_in[6] => ram.DATAB
data_in[6] => ram.DATAB
data_in[6] => ram.DATAB
data_in[6] => ram.DATAB
data_in[6] => ram.DATAB
data_in[6] => ram.DATAB
data_in[7] => ram.DATAB
data_in[7] => ram.DATAB
data_in[7] => ram.DATAB
data_in[7] => ram.DATAB
data_in[7] => ram.DATAB
data_in[7] => ram.DATAB
MODE => Decoder1.IN0
clk => prev_reg.CLK
clk => current_reg.CLK
clk => ram[0][0].CLK
clk => ram[0][1].CLK
clk => ram[0][2].CLK
clk => ram[0][3].CLK
clk => ram[0][4].CLK
clk => ram[0][5].CLK
clk => ram[0][6].CLK
clk => ram[0][7].CLK
clk => ram[1][0].CLK
clk => ram[1][1].CLK
clk => ram[1][2].CLK
clk => ram[1][3].CLK
clk => ram[1][4].CLK
clk => ram[1][5].CLK
clk => ram[1][6].CLK
clk => ram[1][7].CLK
clk => ram[2][0].CLK
clk => ram[2][1].CLK
clk => ram[2][2].CLK
clk => ram[2][3].CLK
clk => ram[2][4].CLK
clk => ram[2][5].CLK
clk => ram[2][6].CLK
clk => ram[2][7].CLK
clk => ram[3][0].CLK
clk => ram[3][1].CLK
clk => ram[3][2].CLK
clk => ram[3][3].CLK
clk => ram[3][4].CLK
clk => ram[3][5].CLK
clk => ram[3][6].CLK
clk => ram[3][7].CLK
clk => ram[4][0].CLK
clk => ram[4][1].CLK
clk => ram[4][2].CLK
clk => ram[4][3].CLK
clk => ram[4][4].CLK
clk => ram[4][5].CLK
clk => ram[4][6].CLK
clk => ram[4][7].CLK
clk => ram[5][0].CLK
clk => ram[5][1].CLK
clk => ram[5][2].CLK
clk => ram[5][3].CLK
clk => ram[5][4].CLK
clk => ram[5][5].CLK
clk => ram[5][6].CLK
clk => ram[5][7].CLK
clk => rdy~reg0.CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => addressDEBUG_reg[0].CLK
clk => addressDEBUG_reg[1].CLK
clk => addressDEBUG_reg[2].CLK
clk => addressDEBUG_reg[3].CLK
clk => addressDEBUG_reg[4].CLK
clk => addressDEBUG_reg[5].CLK
clk => addressDEBUG_reg[6].CLK
clk => addressDEBUG_reg[7].CLK
clk => addressDEBUG_reg[8].CLK
clk => addressDEBUG_reg[9].CLK
clk => addressDEBUG_reg[10].CLK
clk => addressDEBUG_reg[11].CLK
clk => addressWRITE_reg[0].CLK
clk => addressWRITE_reg[1].CLK
clk => addressWRITE_reg[2].CLK
clk => addressWRITE_reg[3].CLK
clk => addressWRITE_reg[4].CLK
clk => addressWRITE_reg[5].CLK
clk => addressWRITE_reg[6].CLK
clk => addressWRITE_reg[7].CLK
clk => addressWRITE_reg[8].CLK
clk => addressWRITE_reg[9].CLK
clk => addressWRITE_reg[10].CLK
clk => addressWRITE_reg[11].CLK
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressWRITE_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => addressDEBUG_reg.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => data_out.OUTPUTSELECT
rst => rdy.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => ram.OUTPUTSELECT
rst => current_reg.ENA
rst => prev_reg.ENA
DEBUG => current_reg.DATAB
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => ram.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT
load => addressWRITE_reg.OUTPUTSELECT


|TopLevel|InstructionBuffer:inst1|fine_clk_divN:inst12
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk_in => clk_out~reg0.CLK
clk_in => counter_reg[0].CLK
clk_in => counter_reg[1].CLK
clk_in => counter_reg[2].CLK
clk_in => counter_reg[3].CLK
clk_in => counter_reg[4].CLK
clk_in => counter_reg[5].CLK
clk_in => counter_reg[6].CLK
clk_in => counter_reg[7].CLK
clk_in => counter_reg[8].CLK
clk_in => counter_reg[9].CLK
clk_in => counter_reg[10].CLK
clk_in => counter_reg[11].CLK
clk_in => counter_reg[12].CLK
clk_in => counter_reg[13].CLK
clk_in => counter_reg[14].CLK
clk_in => counter_reg[15].CLK
clk_in => counter_reg[16].CLK
clk_in => counter_reg[17].CLK
clk_in => counter_reg[18].CLK
clk_in => counter_reg[19].CLK
clk_in => counter_reg[20].CLK
clk_in => counter_reg[21].CLK
clk_in => counter_reg[22].CLK
clk_in => counter_reg[23].CLK
clk_in => counter_reg[24].CLK
rst => Decoder0.IN0


|TopLevel|InstructionBuffer:inst1|d_ffN:inst16
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d[0] => Selector0.IN4
clk => q[0]~reg0.CLK
rst => Equal0.IN2
rst => WideNor0.IN1
rst => Selector0.IN5
en => Equal0.IN3


|TopLevel|InstructionBuffer:inst1|d_ffN:inst14
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d[0] => Selector0.IN4
clk => q[0]~reg0.CLK
rst => Equal0.IN2
rst => WideNor0.IN1
rst => Selector0.IN5
en => Equal0.IN3


|TopLevel|InstructionBuffer:inst1|d_ffN:inst15
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d[0] => Selector7.IN4
d[1] => Selector6.IN4
d[2] => Selector5.IN4
d[3] => Selector4.IN4
d[4] => Selector3.IN4
d[5] => Selector2.IN4
d[6] => Selector1.IN4
d[7] => Selector0.IN4
clk => q[0]~reg0.CLK
clk => q[1]~reg0.CLK
clk => q[2]~reg0.CLK
clk => q[3]~reg0.CLK
clk => q[4]~reg0.CLK
clk => q[5]~reg0.CLK
clk => q[6]~reg0.CLK
clk => q[7]~reg0.CLK
rst => Equal0.IN2
rst => WideNor0.IN1
rst => Selector0.IN5
rst => Selector1.IN5
rst => Selector2.IN5
rst => Selector3.IN5
rst => Selector4.IN5
rst => Selector5.IN5
rst => Selector6.IN5
rst => Selector7.IN5
en => Equal0.IN3


|TopLevel|InstructionBuffer:inst1|d_ffN:inst11
q[0] <= q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
d[0] => Selector7.IN4
d[1] => Selector6.IN4
d[2] => Selector5.IN4
d[3] => Selector4.IN4
d[4] => Selector3.IN4
d[5] => Selector2.IN4
d[6] => Selector1.IN4
d[7] => Selector0.IN4
clk => q[0]~reg0.CLK
clk => q[1]~reg0.CLK
clk => q[2]~reg0.CLK
clk => q[3]~reg0.CLK
clk => q[4]~reg0.CLK
clk => q[5]~reg0.CLK
clk => q[6]~reg0.CLK
clk => q[7]~reg0.CLK
rst => Equal0.IN2
rst => WideNor0.IN1
rst => Selector0.IN5
rst => Selector1.IN5
rst => Selector2.IN5
rst => Selector3.IN5
rst => Selector4.IN5
rst => Selector5.IN5
rst => Selector6.IN5
rst => Selector7.IN5
en => Equal0.IN3


|TopLevel|UART:inst
eot <= bsy_detector:inst2.eot
clk_50MHz => uart_clk_divN:inst.clk_in
SW0 => uart_clk_divN:inst.rst
SW0 => uart_controller:inst1.rst
SW0 => bsy_detector:inst2.rst
UART2_RX => uart_clk_divN:inst.sense
UART2_RX => uart_controller:inst1.data_in
data_out[0] <= bsy_detector:inst2.data_out[0]
data_out[1] <= bsy_detector:inst2.data_out[1]
data_out[2] <= bsy_detector:inst2.data_out[2]
data_out[3] <= bsy_detector:inst2.data_out[3]
data_out[4] <= bsy_detector:inst2.data_out[4]
data_out[5] <= bsy_detector:inst2.data_out[5]
data_out[6] <= bsy_detector:inst2.data_out[6]
data_out[7] <= bsy_detector:inst2.data_out[7]


|TopLevel|UART:inst|bsy_detector:inst2
data_out[0] <= data_out[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
eot <= eot$latch.DB_MAX_OUTPUT_PORT_TYPE
data_in[0] => data_out[0]$latch.DATAIN
data_in[1] => data_out[1]$latch.DATAIN
data_in[2] => data_out[2]$latch.DATAIN
data_in[3] => data_out[3]$latch.DATAIN
data_in[4] => data_out[4]$latch.DATAIN
data_in[5] => data_out[5]$latch.DATAIN
data_in[6] => data_out[6]$latch.DATAIN
data_in[7] => data_out[7]$latch.DATAIN
bsy => data_out[0]$latch.LATCH_ENABLE
bsy => data_out[1]$latch.LATCH_ENABLE
bsy => data_out[2]$latch.LATCH_ENABLE
bsy => data_out[3]$latch.LATCH_ENABLE
bsy => data_out[4]$latch.LATCH_ENABLE
bsy => data_out[5]$latch.LATCH_ENABLE
bsy => data_out[6]$latch.LATCH_ENABLE
bsy => data_out[7]$latch.LATCH_ENABLE
bsy => eot$latch.DATAIN
rst => data_out[0]$latch.ACLR
rst => data_out[1]$latch.ACLR
rst => data_out[2]$latch.ACLR
rst => data_out[3]$latch.ACLR
rst => data_out[4]$latch.ACLR
rst => data_out[5]$latch.ACLR
rst => data_out[6]$latch.ACLR
rst => data_out[7]$latch.ACLR
rst => eot$latch.LATCH_ENABLE


|TopLevel|UART:inst|uart_controller:inst1
data_out[0] <= shift_reg[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= shift_reg[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= shift_reg[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= shift_reg[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= shift_reg[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= shift_reg[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= shift_reg[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= shift_reg[7].DB_MAX_OUTPUT_PORT_TYPE
bsy <= bsy~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => bsy~reg0.CLK
clk => counter_reg[0].CLK
clk => counter_reg[1].CLK
clk => counter_reg[2].CLK
clk => counter_reg[3].CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
rst => bsy~reg0.PRESET
rst => counter_reg[0].ACLR
rst => counter_reg[1].ACLR
rst => counter_reg[2].ACLR
rst => counter_reg[3].ACLR
rst => shift_reg[0].ACLR
rst => shift_reg[1].ACLR
rst => shift_reg[2].ACLR
rst => shift_reg[3].ACLR
rst => shift_reg[4].ACLR
rst => shift_reg[5].ACLR
rst => shift_reg[6].ACLR
rst => shift_reg[7].ACLR
data_in => shift_reg.DATAB


|TopLevel|UART:inst|uart_clk_divN:inst
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk_in => bsy_posedge_waiting.CLK
clk_in => transmission_state.CLK
clk_in => clk_out~reg0.CLK
clk_in => counter_reg[0].CLK
clk_in => counter_reg[1].CLK
clk_in => counter_reg[2].CLK
clk_in => counter_reg[3].CLK
clk_in => counter_reg[4].CLK
clk_in => counter_reg[5].CLK
clk_in => counter_reg[6].CLK
clk_in => counter_reg[7].CLK
clk_in => counter_reg[8].CLK
clk_in => counter_reg[9].CLK
clk_in => counter_reg[10].CLK
clk_in => counter_reg[11].CLK
clk_in => counter_reg[12].CLK
clk_in => counter_reg[13].CLK
clk_in => counter_reg[14].CLK
clk_in => counter_reg[15].CLK
clk_in => counter_reg[16].CLK
clk_in => counter_reg[17].CLK
clk_in => counter_reg[18].CLK
clk_in => counter_reg[19].CLK
clk_in => counter_reg[20].CLK
clk_in => counter_reg[21].CLK
clk_in => counter_reg[22].CLK
clk_in => counter_reg[23].CLK
clk_in => counter_reg[24].CLK
rst => Decoder0.IN0
sense => transmission_state.OUTPUTSELECT
sense => bsy_posedge_waiting.OUTPUTSELECT
bsy => always0.IN1
bsy => bsy_posedge_waiting.OUTPUTSELECT


|TopLevel|debouncer:inst14
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
d => state_reg.OUTPUTSELECT
d => state_reg.OUTPUTSELECT
d => state_reg.OUTPUTSELECT
d => state_reg.OUTPUTSELECT
d => state_reg.OUTPUTSELECT
d => state_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
d => counter_reg.OUTPUTSELECT
clk => q~reg0.CLK
clk => counter_reg[0].CLK
clk => counter_reg[1].CLK
clk => counter_reg[2].CLK
clk => counter_reg[3].CLK
clk => counter_reg[4].CLK
clk => counter_reg[5].CLK
clk => counter_reg[6].CLK
clk => counter_reg[7].CLK
clk => counter_reg[8].CLK
clk => counter_reg[9].CLK
clk => counter_reg[10].CLK
clk => counter_reg[11].CLK
clk => counter_reg[12].CLK
clk => counter_reg[13].CLK
clk => counter_reg[14].CLK
clk => counter_reg[15].CLK
clk => counter_reg[16].CLK
clk => counter_reg[17].CLK
clk => counter_reg[18].CLK
clk => counter_reg[19].CLK
clk => counter_reg[20].CLK
clk => counter_reg[21].CLK
clk => counter_reg[22].CLK
clk => counter_reg[23].CLK
clk => counter_reg[24].CLK
clk => state_reg~4.DATAIN
rst => q~reg0.ACLR
rst => counter_reg[0].ACLR
rst => counter_reg[1].ACLR
rst => counter_reg[2].ACLR
rst => counter_reg[3].ACLR
rst => counter_reg[4].ACLR
rst => counter_reg[5].ACLR
rst => counter_reg[6].ACLR
rst => counter_reg[7].ACLR
rst => counter_reg[8].ACLR
rst => counter_reg[9].ACLR
rst => counter_reg[10].ACLR
rst => counter_reg[11].ACLR
rst => counter_reg[12].ACLR
rst => counter_reg[13].ACLR
rst => counter_reg[14].ACLR
rst => counter_reg[15].ACLR
rst => counter_reg[16].ACLR
rst => counter_reg[17].ACLR
rst => counter_reg[18].ACLR
rst => counter_reg[19].ACLR
rst => counter_reg[20].ACLR
rst => counter_reg[21].ACLR
rst => counter_reg[22].ACLR
rst => counter_reg[23].ACLR
rst => counter_reg[24].ACLR
rst => state_reg~6.DATAIN


|TopLevel|seven_seg_controller:inst6
disp0[6] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
disp0[5] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
disp0[4] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
disp0[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
disp0[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
disp0[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
disp0[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
disp1[6] <= WideOr13.DB_MAX_OUTPUT_PORT_TYPE
disp1[5] <= WideOr12.DB_MAX_OUTPUT_PORT_TYPE
disp1[4] <= WideOr11.DB_MAX_OUTPUT_PORT_TYPE
disp1[3] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
disp1[2] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
disp1[1] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
disp1[0] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0
data[4] => Decoder1.IN3
data[5] => Decoder1.IN2
data[6] => Decoder1.IN1
data[7] => Decoder1.IN0


|TopLevel|seven_seg_controller:inst16
disp0[6] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
disp0[5] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
disp0[4] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
disp0[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
disp0[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
disp0[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
disp0[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
disp1[6] <= WideOr13.DB_MAX_OUTPUT_PORT_TYPE
disp1[5] <= WideOr12.DB_MAX_OUTPUT_PORT_TYPE
disp1[4] <= WideOr11.DB_MAX_OUTPUT_PORT_TYPE
disp1[3] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
disp1[2] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
disp1[1] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
disp1[0] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
data[0] => Decoder0.IN3
data[1] => Decoder0.IN2
data[2] => Decoder0.IN1
data[3] => Decoder0.IN0
data[4] => Decoder1.IN3
data[5] => Decoder1.IN2
data[6] => Decoder1.IN1
data[7] => Decoder1.IN0


